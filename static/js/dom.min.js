"use strict";class Dom{constructor(selector){return this.elements=Dom.getSelector(selector),this.element=this.get(),this}static getSelector(selector){const idRegex=/^#(?:[\w-]|\\.|[^\x20-\xa0])*$/;if(idRegex.test(selector)){const el=document.getElementById(selector.substring(1));return el?[el]:[]}return[].slice.call(document.querySelectorAll(selector)||[])}get(index=0){return this.elements[index]}each(func){return this.elements.forEach(el=>{func(el)}),this}addClass(classNames=""){return this.each(el=>{classNames.split(" ").forEach(className=>{className&&el.classList.add(className)})}),this}html(html){if(void 0===html){if(!this.element)return;return this.element.innerHTML}return this.each(el=>{el.innerHTML=html}),this}val(value){if(void 0===value){if(!this.element)return;return this.element.value}return this.each(el=>{el.value=value}),this}click(func){if(func)return this.each(el=>{el.addEventListener("click",func,!1)}),this;this.element.click()}attr(attr,val){if(void 0===val){if(!this.element)return;return this.element.getAttribute(attr)||void 0}return this.each(el=>{el.setAttribute(attr,val)}),this}append(ele){return this.each(el=>{el.appendChild(ele)}),this}}const $ry=selector=>new Dom(selector);